name: Deploy Spring Boot to VPS

on:
  push:
    branches:
      - main  # Ch·∫°y khi push l√™n nh√°nh `main`

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Clone source code t·ª´ GitHub
      - name: 1Ô∏è‚É£ Checkout repository
        uses: actions/checkout@v3

      # 2Ô∏è‚É£ Build Docker Image
      - name: 2Ô∏è‚É£ Build Docker Image
        run: |
          docker build -t myapp:latest .
          docker save myapp:latest -o myapp.tar

      # 3Ô∏è‚É£ Copy Docker Image l√™n VPS
      - name: 3Ô∏è‚É£ Copy image to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          source: "myapp.tar"
          target: "/home/user/app/"

      # 4Ô∏è‚É£ Deploy tr√™n VPS m√† kh√¥ng b·ªã tr√πng port
      - name: 4Ô∏è‚É£ Load Docker Image & Restart Container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd /home/user/app
            docker load -i myapp.tar
            docker stop spring_boot || true
            docker rm spring_boot || true
            docker run -d --name spring_boot -p 8080:8080 --restart always myapp:latest

      # 5Ô∏è‚É£ G·ª≠i th√¥ng b√°o l√™n Discord khi deploy th√†nh c√¥ng
      - name: 5Ô∏è‚É£ Notify Discord for success
        run: |
          curl -X POST -H "Content-Type: application/json" \
            -d '{"content": "üöÄ Deploy Spring Boot th√†nh c√¥ng l√™n VPS!"}' \
            ${{ secrets.DISCORD_WEBHOOK_URL }}

    # 6Ô∏è‚É£ G·ª≠i th√¥ng b√°o l√™n Discord n·∫øu c√≥ l·ªói trong workflow
  failure:
    runs-on: ubuntu-latest
    steps:
      - name: 6Ô∏è‚É£ Notify Discord for failure
        run: |
          curl -X POST -H "Content-Type: application/json" \
            -d '{"content": "‚ö†Ô∏è Deploy Spring Boot th·∫•t b·∫°i!"}' \
            ${{ secrets.DISCORD_WEBHOOK_URL }}
