name: Deploy Spring Boot to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 🔔 Gửi thông báo khi bắt đầu deploy
      - name: 🔔 Notify Discord for Deploy Start
        env:
          WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          if [ -n "$WEBHOOK" ]; then
            TIME_NOW=$(date +"%Y-%m-%d %H:%M:%S")
            curl -X POST -H "Content-Type: application/json" \
            -d '{
              "username": "Deploy Bot",
              "avatar_url": "https://res.cloudinary.com/dtgxoujtw/image/upload/v1741496910/icks3qexzybso5ztoolz.jpg",
              "embeds": [{
                "title": "🚀 Deployment Started!",
                "description": "Spring Boot backend ** đang được deploy ** ",
                "color": 15258703,
                "fields": [
                  { "name": "🛠 Service", "value": "Backend - Spring Boot", "inline": true },
                  { "name": "📂 Branch", "value": "'"${{ github.ref_name }}"'", "inline": true },
                  { "name": "🆔 Commit", "value": "'"${{ github.sha }}"'", "inline": false },
                  { "name": "🕒 Time", "value": "'"$TIME_NOW"'", "inline": false }
                ],
                "footer": { "text": "GitHub Actions | Automate Everything" }
              }]
            }' "$WEBHOOK"
          fi

      # 1️⃣ Clone source code từ GitHub
      - name: 1️⃣ Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ Thiết lập JDK 21
      - name: 2️⃣ Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      # 3️⃣ Cài đặt Maven
      - name: 3️⃣ Install Maven
        run: sudo apt-get install -y maven

      # 4️⃣ Xóa thư mục cũ & Kiểm tra lại source code
      - name: 4️⃣ Clean old builds
        run: |
          rm -rf target
          ls -la

      # 5️⃣ Build Spring Boot Application
      - name: 5️⃣ Build Spring Boot Application
        run: |
          chmod +x mvnw || true
          ./mvnw clean package -DskipTests || mvn clean package -DskipTests

      # 6️⃣ Kiểm tra lại file JAR
      - name: 6️⃣ Verify JAR file exists
        run: |
          ls -la target/
          JAR_FILE=$(ls target/*.jar | head -n 1)
          if [ -z "$JAR_FILE" ]; then
            echo "❌ Lỗi: Không tìm thấy file JAR trong thư mục target/"
            exit 1
          fi
          echo "✅ Tìm thấy file JAR: $JAR_FILE"

      # 7️⃣ Build Docker Image
      - name: 🏗 Build Docker Image
        run: |
          mv target/*.jar target/myapp.jar
          docker build -t myapp:latest .
          docker save myapp:latest -o myapp.tar
          sudo chmod 644 myapp.tar  # Đảm bảo quyền truy cập

      # 8️⃣ Kiểm tra file Docker Image tar
      - name: ✅ Verify Docker image tar file
        run: |
          ls -la
          if [ ! -f myapp.tar ]; then
            echo "❌ Lỗi: Không tìm thấy myapp.tar"
            exit 1
          fi

      # 9️⃣ Copy Docker Image lên VPS
      - name: 📦 Copy image to VPS
        env:
          VPS_IP: ${{ secrets.VPS_HOST }}
          VPS_USER: ${{ secrets.VPS_USER }}
          VPS_SSH_KEY: ${{ secrets.VPS_SSH_KEY }}
        run: |
          echo "${VPS_SSH_KEY}" > ssh_key
          chmod 600 ssh_key
          ssh -o StrictHostKeyChecking=no -i ssh_key ${VPS_USER}@${VPS_IP} "mkdir -p /home/user/app/"
          scp -o StrictHostKeyChecking=no -i ssh_key myapp.tar ${VPS_USER}@${VPS_IP}:/home/user/app/

      # 🔟 Deploy trên VPS mà không bị trùng port
      - name: 🚀 Load Docker Image & Restart Container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            sudo systemctl start docker || sudo service docker start
            cd /home/user/app
            docker load -i myapp.tar
            docker stop spring_boot || true
            docker rm spring_boot || true
            docker run -d --name spring_boot -p 8080:8080 --restart always myapp:latest

      # ✅ Gửi thông báo khi deploy thành công
      - name: ✅ Notify Discord for Success
        if: success()
        env:
          WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          if [ -n "$WEBHOOK" ]; then
            TIME_NOW=$(date +"%Y-%m-%d %H:%M:%S")
            curl -X POST -H "Content-Type: application/json" \
            -d '{
              "username": "Deploy Bot",
              "avatar_url": "https://res.cloudinary.com/dtgxoujtw/image/upload/v1741496910/icks3qexzybso5ztoolz.jpg",
              "embeds": [{
                "title": "✅ Deployment Successful!",
                "description": "Spring Boot backend đã deploy ** thành công ** 🎉",
                "color": 3066993,
                "fields": [
                  { "name": "🛠 Service", "value": "Backend - Spring Boot", "inline": true },
                  { "name": "📂 Branch", "value": "'"${{ github.ref_name }}"'", "inline": true },
                  { "name": "🆔 Commit", "value": "'"${{ github.sha }}"'", "inline": false },
                  { "name": "🕒 Time", "value": "'"$TIME_NOW"'", "inline": false },
                  { "name": "⚡ Status", "value": "**Thành công** ✅", "inline": true }
                ],
                "footer": { "text": "GitHub Actions | CI/CD Automation" }
              }]
            }' "$WEBHOOK"
          fi

      # ❌ Gửi thông báo khi deploy thất bại
      - name: ❌ Notify Discord for Failure
        if: failure()
        env:
          WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          if [ -n "$WEBHOOK" ]; then
            TIME_NOW=$(date +"%Y-%m-%d %H:%M:%S")
            curl -X POST -H "Content-Type: application/json" \
            -d '{
              "username": "Deploy Bot",
              "avatar_url": "https://res.cloudinary.com/dtgxoujtw/image/upload/v1741496910/icks3qexzybso5ztoolz.jpg",
              "embeds": [{
                "title": "❌ Deployment Failed!",
                "description": "Spring Boot backend deploy ** thất bại ** 😞",
                "color": 15158332,
                "fields": [
                  { "name": "🛠 Service", "value": "Backend - Spring Boot", "inline": true },
                  { "name": "📂 Branch", "value": "'"${{ github.ref_name }}"'", "inline": true },
                  { "name": "🆔 Commit", "value": "'"${{ github.sha }}"'", "inline": false },
                  { "name": "🕒 Time", "value": "'"$TIME_NOW"'", "inline": false },
                  { "name": "⚡ Status", "value": "**Thất bại** ❌", "inline": true }
                ],
                "footer": { "text": "GitHub Actions | CI/CD Automation" }
              }]
            }' "$WEBHOOK"
          fi
